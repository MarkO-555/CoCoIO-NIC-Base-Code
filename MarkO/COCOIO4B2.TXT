                ;*********************************************************************
                ;* Title: COCOIODRV-4B.asm
                ;*********************************************************************
                ;* Author: R. Allen Murphey, & MarkO
                ;*
                ;* License: Contributed 2021 by R. Allen Murphey to CoCoIO Development
                ;*
                ;* Description: CoCoIO with WIZnet W5100S driver code
                ;*
                ;* Documentation: https://www.wiznet.io/product-item/w5100s/
                ;*
                ;* Include Files: W5100SEQU.asm - W5100S Equates
                ;*                COCOIOEQU.asm - CoCoIO Equates
                ;*                COCOIOCFG.asm - CoCoIO Config Data
                ;*
                ;* Assembler: lwasm 1.4.2
                ;*
                ;* Revision History:
                ;* Rev #     Date      Who     Comments
                ;* -----  -----------  ------  ---------------------------------------
                ;* 00     2021         RAM     Initial Reset and Config functions
                ;*********************************************************************
                
                            include "W5100SEQU.asm"
                ;*********************************************************************
                ;* Title: W5100SEQU.asm
                ;*********************************************************************
                ;* Author: R. Allen Murphey
                ;*
                ;* License: Contributed 2021 by R. Allen Murphey to CoCoIO Development
                ;*
                ;* Description: WIZnet W5100S driver equates
                ;*
                ;* Documentation: https://www.wiznet.io/product-item/w5100s/
                ;*
                ;* Include Files: none
                ;*
                ;* Assembler: lwasm 1.4.2
                ;*
                ;* Revision History:
                ;* Rev #     Date      Who     Comments
                ;* -----  -----------  ------  ---------------------------------------
                ;* 00     2021         RAM     Initial equates from W5100S Data Sheet
                ;*********************************************************************
                
                                              ; W5100S REGISTER / MEMORY MAP
                                              ; 0x0000 - 0x002F Common Registers W5100 compatible
                                              ; 0x0030 - 0x0088 Common Registers New W5100S
                                              ; 0x0089 - 0x03FF -- Reserved --
                                              ; 0x0400 - 0x04FF Socket 0 Registers
                                              ; 0x0500 - 0x05FF Socket 1 Registers
                                              ; 0x0600 - 0x06FF Socket 2 Registers
                                              ; 0x0700 - 0x07FF Socket 3 Registers
                                              ; 0x0800 - 0x3FFF -- Reserved --
                                              ; 0x4000 - 0x5FFF TX Memory - default 2KB per socket
                                              ; 0x6000 - 0x7FFF RX Memory - default 2KB per socket
                
                                              ; COMMON REGISTERS 0x0000-0x0088
     0000       MR:         equ   $0000       ; Mode Register
     0001       GAR0:       equ   $0001       ; Gateway Address Register 0
     0002       GAR1:       equ   $0002       ; Gateway Address Register 1
     0003       GAR2:       equ   $0003       ; Gateway Address Register 2
     0004       GAR3:       equ   $0004       ; Gateway Address Register 3
     0005       SUBR0:      equ   $0005       ; Subnet Mask Address Register 0
     0006       SUBR1:      equ   $0006       ; Subnet Mask Address Register 1
     0007       SUBR2:      equ   $0007       ; Subnet Mask Address Register 2
     0008       SUBR3:      equ   $0008       ; Subnet Mask Address Register 3
     0009       SHAR0:      equ   $0009       ; Source Hardware Address Register 0
     000A       SHAR1:      equ   $000A       ; Source Hardware Address Register 1
     000B       SHAR2:      equ   $000B       ; Source Hardware Address Register 2
     000C       SHAR3:      equ   $000C       ; Source Hardware Address Register 3
     000D       SHAR4:      equ   $000D       ; Source Hardware Address Register 4
     000E       SHAR5:      equ   $000E       ; Source Hardware Address Register 5
     000F       SIPR0:      equ   $000F       ; Source IP Address Register 0
     0010       SIPR1:      equ   $0010       ; Source IP Address Register 1
     0011       SIPR2:      equ   $0011       ; Source IP Address Register 2
     0012       SIPR3:      equ   $0012       ; Source IP Address Register 3
     0013       INTPTMR0:   equ   $0013       ; Interrupt Pending Time Register 0
     0014       INTPTMR1:   equ   $0014       ; Interrupt Pending Time Register 1
     0015       IR:         equ   $0015       ; Interrupt Register
     0016       IMR:        equ   $0016       ; Interrupt Mask Register
     0017       RTR0:       equ   $0017       ; Retransmission Time Register 0
     0018       RTR1:       equ   $0018       ; Retransmission Time Register 1
     0019       RCR:        equ   $0019       ; Retransmission Count Register
     001A       RMSR:       equ   $001A       ; RX Memory Size Register
     001B       TMSR:       equ   $001B       ; TX Memory Size Register
                                              ; 0x001C-0x001F -- Reserved --
     0020       IR2:        equ   $0020       ; Interrupt2 Register
     0021       IMR2:       equ   $0021       ; Interrupt2 Mask Register
                                              ; 0x0022-0x0027 -- Reserved --
     0028       PTIMER:     equ   $0028       ; PPP LCP Request Timer
     0029       PMAGIC:     equ   $0029       ; PPP LCP Magic Number
     002A       UIPR0:      equ   $002A       ; Unreachable IP Address Register 0
     002B       UIPR1:      equ   $002B       ; Unreachable IP Address Register 1
     002C       UIPR2:      equ   $002C       ; Unreachable IP Address Register 2
     002D       UIPR3:      equ   $002D       ; Unreachable IP Address Register 0
     002E       UPORTR0:    equ   $002E       ; Unreachable Port Register 0
     002F       UPORTR1:    equ   $002F       ; Unreachable Port Register 1
     0030       MR2:        equ   $0030       ; Mode2 Register
                                              ; 0x0031 --  Reserved --
     0032       PHAR0:      equ   $0032       ; Destination Hardware Address on PPPoE Register 0
     0033       PHAR1:      equ   $0033       ; Destination Hardware Address on PPPoE Register 1
     0034       PHAR2:      equ   $0034       ; Destination Hardware Address on PPPoE Register 2
     0035       PHAR3:      equ   $0035       ; Destination Hardware Address on PPPoE Register 3
     0036       PHAR4:      equ   $0036       ; Destination Hardware Address on PPPoE Register 4
     0037       PHAR5:      equ   $0037       ; Destination Hardware Address on PPPoE Register 5
     0038       PSIDR0:     equ   $0038       ; Session ID on PPPoE Register 0
     0039       PSIDR1:     equ   $0039       ; Session ID on PPPoE Register 1
     003A       PMRUR0:     equ   $003A       ; Maximum Receive Unit on PPPoE Register 0
     003B       PMRUR1:     equ   $003B       ; Maximum Receive Unit on PPPoE Register 1
     003C       PHYSR0:     equ   $003C       ; PHY Status Register 0
     003D       PHYSR1:     equ   $003D       ; PHY Status Register 1
     003E       PHYAR:      equ   $003E       ; PHY Address Value
     003F       PHYRAR:     equ   $003F       ; PHY Register Address
     0040       PHYDIR0:    equ   $0040       ; PHY Data Input Register 0
     0041       PHYDIR1:    equ   $0041       ; PHY Data Input Register 1
     0042       PHYDOR0:    equ   $0042       ; PHY Data Output Register 0
     0043       PHYDOR1:    equ   $0043       ; PHY Data Output Register 1
     0044       PHYACR:     equ   $0044       ; PHY Access Register
     0045       PHYDIVR     equ   $0045       ; PHY Division Register
     0046       PHYCR0:     equ   $0046       ; PHY Control Register 0
     0047       PHYCR1:     equ   $0047       ; PHY Control Register 1
                                              ; 0x0048-0x004B -- Reserved --
     004C       SLCR:       equ   $004C       ; SOCKET-less Command Register
     004D       SLRTR0:     equ   $004D       ; SOCKET-less Retransmission Time Register 0
     004E       SLRTR1:     equ   $004E       ; SOCKET-less Retransmission Time Register 1
     004F       SLRCR:      equ   $004F       ; SOCKET-less Retransmission Count Register
     0050       SLPIPR0:    equ   $0050       ; SOCKET-less Peer IP Address Register 0
     0051       SLPIPR1:    equ   $0051       ; SOCKET-less Peer IP Address Register 1
     0052       SLPIPR2:    equ   $0052       ; SOCKET-less Peer IP Address Register 2
     0053       SLPIPR3:    equ   $0053       ; SOCKET-less Peer IP Address Register 3
     0054       SLPHAR0:    equ   $0054       ; SOCKET-less Peer Hardware Address Register 0
     0055       SLPHAR1:    equ   $0055       ; SOCKET-less Peer Hardware Address Register 1
     0056       SLPHAR2:    equ   $0056       ; SOCKET-less Peer Hardware Address Register 2
     0057       SLPHAR3:    equ   $0057       ; SOCKET-less Peer Hardware Address Register 3
     0058       SLPHAR4:    equ   $0058       ; SOCKET-less Peer Hardware Address Register 4
     0059       SLPHAR5:    equ   $0059       ; SOCKET-less Peer Hardware Address Register 5
     005A       PINGSEQR0:  equ   $005A       ; PING Sequence Number Register 0
     005B       PINGSEQR1:  equ   $005B       ; PING Sequence Number Register 1
     005C       PINGIDR0:   equ   $005C       ; PING ID Register 0
     005D       PINGIDR1:   equ   $005D       ; PING ID Register 1
     005E       SLIMR:      equ   $005E       ; SOCKET-less Interrupt Mask Register
     005F       SLIR:       equ   $005F       ; SOCKET-less Interrupt Register
                                              ; 0x0060-0x006A -- Reserved --
     0070       CLKLCKR:    equ   $0070       ; Clock Lock Register
     0071       NETLCKR:    equ   $0071       ; Network Lock Register
     0072       PHYLCKR:    equ   $0072       ; PHY Lock Register
                                              ; 0x0073-0x007F -- Reserved --
     0080       VERR:       equ   $0080       ; Chip Version
                                              ; 0x0081 -- Reserved --
     0082       TCNTR0:     equ   $0082       ; 100us Ticker Counter Register 0
     0083       TCNTR1:     equ   $0083       ; 100us Ticker Counter Register 1
                                              ; 0x0084-0x0087 -- Reserved --
     0088       TCNTCLR:    equ   $0088       ; 100us Ticker Counter Clear Register
                
                                              ; SOCKET 0 REGISTERS 0x0400-0x04FF 45 bytes per socket
     0400       S0_MR:      equ   $0400       ; Socket 0 Mode Register
     0401       S0_CR:      equ   $0401       ; Socket 0 Command Register
     0402       S0_IR:      equ   $0402       ; Socket 0 Interrupt Register
     0403       S0_SR:      equ   $0403       ; Socket 0 Status Register
     0404       S0_PORTR0:  equ   $0404       ; Socket 0 Source Port Register 0
     0405       S0_PORTR1:  equ   $0405       ; Socket 0 Source Port Register 1
     0406       S0_DHAR0:   equ   $0406       ; Socket 0 Destination Hardware Address Register 0
     0407       S0_DHAR1:   equ   $0407       ; Socket 0 Destination Hardware Address Register 1
     0408       S0_DHAR2:   equ   $0408       ; Socket 0 Destination Hardware Address Register 2
     0409       S0_DHAR3:   equ   $0409       ; Socket 0 Destination Hardware Address Register 3
     040A       S0_DHAR4:   equ   $040A       ; Socket 0 Destination Hardware Address Register 4
     040B       S0_DHAR5:   equ   $040B       ; Socket 0 Destination Hardware Address Register 5
     040C       S0_DIPR0:   equ   $040C       ; Socket 0 Destination IP Address Register 0
     040D       S0_DIPR1:   equ   $040D       ; Socket 0 Destination IP Address Register 1
     040E       S0_DIPR2:   equ   $040E       ; Socket 0 Destination IP Address Register 2
     040F       S0_DIPR3:   equ   $040F       ; Socket 0 Destination IP Address Register 3
     0410       S0_DPORTR0: equ   $0410       ; Socket 0 Destination Port Register 0
     0411       S0_DPORTR1: equ   $0411       ; Socket 0 Destination Port Register 1
     0412       S0_MSS0:    equ   $0412       ; Socket 0 Maximum Segment Size Register 0
     0413       S0_MSS1:    equ   $0413       ; Socket 0 Maximum Segment Size Register 1
     0414       S0_PROTOR:  equ   $0414       ; Socket 0 IP Protocol Register
     0415       S0_TOS:     equ   $0415       ; Socket 0 IP Type Of Service
     0416       S0_TTL:     equ   $0416       ; Socket 0 IP Time To Live
                                              ; 0x0417-0x041D -- Reserved --
     041E       S0_RXBUF_SIZE:  equ  $041E    ; Socket 0 RX Buffer Size
     041F       S0_TXBUF_SIZE:  equ  $041F    ; Socket 0 TX Buffer Size
     0420       S0_TX_FSR0: equ   $0420       ; Socket 0 TX Free Size Register 0
     0421       S0_TX_FSR1: equ   $0421       ; Socket 0 TX Free Size Register 1
     0422       S0_TX_RD0:  equ   $0422       ; Socket 0 TX Read Pointer 0
     0423       S0_TX_RD1:  equ   $0423       ; Socket 0 TX Read Pointer 1
     0424       S0_TX_WR0:  equ   $0424       ; Socket 0 TX Write Pointer 0
     0425       S0_TX_WR1:  equ   $0425       ; Socket 0 TX Write Pointer 1
     0426       S0_RX_RSR0: equ   $0426       ; Socket 0 RX Received Size Register 0
     0427       S0_RX_RSR1: equ   $0427       ; Socket 0 RX Received Size Register 1
     0428       S0_RX_RD0:  equ   $0428       ; Socket 0 RX Read Pointer 0
     0429       S0_RX_RD1:  equ   $0429       ; Socket 0 RX Read Pointer 1
     042A       S0_RX_WR0:  equ   $042A       ; Socket 0 RX Write Pointer 0
     042B       S0_RX_WR1:  equ   $042B       ; Socket 0 RX Write Pointer 1
     042C       S0_IMR:     equ   $042C       ; Socket 0 Interrupt Mask Register
     042D       S0_FRAGR0:  equ   $042D       ; Socket 0 Fragment Offset in IP Header Register 0
     042E       S0_FRAGR1:  equ   $042E       ; Socket 0 Fragment Offset in IP Header Register 1
     042F       S0_MR2:     equ   $042F       ; Socket 0 Mode 2 Register
     0430       S0_KPALVTR: equ   $0430       ; Socket 0 Keep-alive Timer Register
                                              ; 0x0431 -- Reserved --
     0432       S0_RTR0:    equ   $0432       ; Socket 0 Retransmission Time Register 0
     0433       S0_RTR1:    equ   $0433       ; Socket 0 Retransmission Time Register 1
     0434       S0_RCR:     equ   $0434       ; Socket 0 Retransmission Count Register
                
                                              ; SOCKET 1 REGISTERS 0x0500-0x05FF 45 bytes per socket
     0500       S1_MR:      equ   $0500       ; Socket 1 Mode Register
     0501       S1_CR:      equ   $0501       ; Socket 1 Command Register
     0502       S1_IR:      equ   $0502       ; Socket 1 Interrupt Register
     0503       S1_SR:      equ   $0503       ; Socket 1 Status Register
     0504       S1_PORTR0:  equ   $0504       ; Socket 1 Source Port Register 0
     0505       S1_PORTR1:  equ   $0505       ; Socket 1 Source Port Register 1
     0506       S1_DHAR0:   equ   $0506       ; Socket 1 Destination Hardware Address Register 0
     0507       S1_DHAR1:   equ   $0507       ; Socket 1 Destination Hardware Address Register 1
     0508       S1_DHAR2:   equ   $0508       ; Socket 1 Destination Hardware Address Register 2
     0509       S1_DHAR3:   equ   $0509       ; Socket 1 Destination Hardware Address Register 3
     050A       S1_DHAR4:   equ   $050A       ; Socket 1 Destination Hardware Address Register 4
     050B       S1_DHAR5:   equ   $050B       ; Socket 1 Destination Hardware Address Register 5
     050C       S1_DIPR0:   equ   $050C       ; Socket 1 Destination IP Address Register 0
     050D       S1_DIPR1:   equ   $050D       ; Socket 1 Destination IP Address Register 1
     050E       S1_DIPR2:   equ   $050E       ; Socket 1 Destination IP Address Register 2
     050F       S1_DIPR3:   equ   $050F       ; Socket 1 Destination IP Address Register 3
     0510       S1_DPORTR0: equ   $0510       ; Socket 1 Destination Port Register 0
     0511       S1_DPORTR1: equ   $0511       ; Socket 1 Destination Port Register 1
     0512       S1_MSS0:    equ   $0512       ; Socket 1 Maximum Segment Size Register 0
     0513       S1_MSS1:    equ   $0513       ; Socket 1 Maximum Segment Size Register 1
     0514       S1_PROTOR:  equ   $0514       ; Socket 1 IP Protocol Register
     0515       S1_TOS:     equ   $0515       ; Socket 1 IP Type Of Service
     0516       S1_TTL:     equ   $0516       ; Socket 1 IP Time To Live
                                              ; 0x0517-0x051D -- Reserved --
     051E       S1_RXBUF_SIZE:  equ  $051E    ; Socket 1 RX Buffer Size
     051F       S1_TXBUF_SIZE:  equ  $051F    ; Socket 1 TX Buffer Size
     0520       S1_TX_FSR0: equ   $0520       ; Socket 1 TX Free Size Register 0
     0521       S1_TX_FSR1: equ   $0521       ; Socket 1 TX Free Size Register 1
     0522       S1_TX_RD0:  equ   $0522       ; Socket 1 TX Read Pointer 0
     0523       S1_TX_RD1:  equ   $0523       ; Socket 1 TX Read Pointer 1
     0524       S1_TX_WR0:  equ   $0524       ; Socket 1 TX Write Pointer 0
     0525       S1_TX_WR1:  equ   $0525       ; Socket 1 TX Write Pointer 1
     0526       S1_RX_RSR0: equ   $0526       ; Socket 1 RX Received Size Register 0
     0527       S1_RX_RSR1: equ   $0527       ; Socket 1 RX Received Size Register 1
     0528       S1_RX_RD0:  equ   $0528       ; Socket 1 RX Read Pointer 0
     0529       S1_RX_RD1:  equ   $0529       ; Socket 1 RX Read Pointer 1
     052A       S1_RX_WR0:  equ   $052A       ; Socket 1 RX Write Pointer 0
     052B       S1_RX_WR1:  equ   $052B       ; Socket 1 RX Write Pointer 1
     052C       S1_IMR:     equ   $052C       ; Socket 1 Interrupt Mask Register
     052D       S1_FRAGR0:  equ   $052D       ; Socket 1 Fragment Offset in IP Header Register 0
     052E       S1_FRAGR1:  equ   $052E       ; Socket 1 Fragment Offset in IP Header Register 1
     052F       S1_MR2:     equ   $052F       ; Socket 1 Mode 2 Register
     0530       S1_KPALVTR: equ   $0530       ; Socket 1 Keep-alive Timer Register
                                              ; 0x0531 -- Reserved --
     0532       S1_RTR0:    equ   $0532       ; Socket 1 Retransmission Time Register 0
     0533       S1_RTR1:    equ   $0533       ; Socket 1 Retransmission Time Register 1
     0534       S1_RCR:     equ   $0534       ; Socket 1 Retransmission Count Register
                
                                              ; SOCKET 2 REGISTERS 0x0600-0x06FF 45 bytes per socket
     0600       S2_MR:      equ   $0600       ; Socket 2 Mode Register
     0601       S2_CR:      equ   $0601       ; Socket 2 Command Register
     0602       S2_IR:      equ   $0602       ; Socket 2 Interrupt Register
     0603       S2_SR:      equ   $0603       ; Socket 2 Status Register
     0604       S2_PORTR0:  equ   $0604       ; Socket 2 Source Port Register 0
     0605       S2_PORTR1:  equ   $0605       ; Socket 2 Source Port Register 1
     0606       S2_DHAR0:   equ   $0606       ; Socket 2 Destination Hardware Address Register 0
     0607       S2_DHAR1:   equ   $0607       ; Socket 2 Destination Hardware Address Register 1
     0608       S2_DHAR2:   equ   $0608       ; Socket 2 Destination Hardware Address Register 2
     0609       S2_DHAR3:   equ   $0609       ; Socket 2 Destination Hardware Address Register 3
     060A       S2_DHAR4:   equ   $060A       ; Socket 2 Destination Hardware Address Register 4
     060B       S2_DHAR5:   equ   $060B       ; Socket 2 Destination Hardware Address Register 5
     060C       S2_DIPR0:   equ   $060C       ; Socket 2 Destination IP Address Register 0
     060D       S2_DIPR1:   equ   $060D       ; Socket 2 Destination IP Address Register 1
     060E       S2_DIPR2:   equ   $060E       ; Socket 2 Destination IP Address Register 2
     060F       S2_DIPR3:   equ   $060F       ; Socket 2 Destination IP Address Register 3
     0610       S2_DPORTR0: equ   $0610       ; Socket 2 Destination Port Register 0
     0611       S2_DPORTR1: equ   $0611       ; Socket 2 Destination Port Register 1
     0612       S2_MSS0:    equ   $0612       ; Socket 2 Maximum Segment Size Register 0
     0613       S2_MSS1:    equ   $0613       ; Socket 2 Maximum Segment Size Register 1
     0614       S2_PROTOR:  equ   $0614       ; Socket 2 IP Protocol Register
     0615       S2_TOS:     equ   $0615       ; Socket 2 IP Type Of Service
     0616       S2_TTL:     equ   $0616       ; Socket 2 IP Time To Live
                                              ; 0x0617-0x061D -- Reserved --
     061E       S2_RXBUF_SIZE:  equ  $061E    ; Socket 2 RX Buffer Size
     061F       S2_TXBUF_SIZE:  equ  $061F    ; Socket 2 TX Buffer Size
     0620       S2_TX_FSR0: equ   $0620       ; Socket 2 TX Free Size Register 0
     0621       S2_TX_FSR1: equ   $0621       ; Socket 2 TX Free Size Register 1
     0622       S2_TX_RD0:  equ   $0622       ; Socket 2 TX Read Pointer 0
     0623       S2_TX_RD1:  equ   $0623       ; Socket 2 TX Read Pointer 1
     0624       S2_TX_WR0:  equ   $0624       ; Socket 2 TX Write Pointer 0
     0625       S2_TX_WR1:  equ   $0625       ; Socket 2 TX Write Pointer 1
     0626       S2_RX_RSR0: equ   $0626       ; Socket 2 RX Received Size Register 0
     0627       S2_RX_RSR1: equ   $0627       ; Socket 2 RX Received Size Register 1
     0628       S2_RX_RD0:  equ   $0628       ; Socket 2 RX Read Pointer 0
     0629       S2_RX_RD1:  equ   $0629       ; Socket 2 RX Read Pointer 1
     062A       S2_RX_WR0:  equ   $062A       ; Socket 2 RX Write Pointer 0
     062B       S2_RX_WR1:  equ   $062B       ; Socket 2 RX Write Pointer 1
     062C       S2_IMR:     equ   $062C       ; Socket 2 Interrupt Mask Register
     062D       S2_FRAGR0:  equ   $062D       ; Socket 2 Fragment Offset in IP Header Register 0
     062E       S2_FRAGR1:  equ   $062E       ; Socket 2 Fragment Offset in IP Header Register 1
     062F       S2_MR2:     equ   $062F       ; Socket 2 Mode 2 Register
     0630       S2_KPALVTR: equ   $0630       ; Socket 2 Keep-alive Timer Register
                                              ; 0x0631 -- Reserved --
     0632       S2_RTR0:    equ   $0632       ; Socket 2 Retransmission Time Register 0
     0633       S2_RTR1:    equ   $0633       ; Socket 2 Retransmission Time Register 1
     0634       S2_RCR:     equ   $0634       ; Socket 2 Retransmission Count Register
                
                                              ; SOCKET 3 REGISTERS 0x0700-0x07FF 45 bytes per socket
     0700       S3_MR:      equ   $0700       ; Socket 3 Mode Register
     0701       S3_CR:      equ   $0701       ; Socket 3 Command Register
     0702       S3_IR:      equ   $0702       ; Socket 3 Interrupt Register
     0703       S3_SR:      equ   $0703       ; Socket 3 Status Register
     0704       S3_PORTR0:  equ   $0704       ; Socket 3 Source Port Register 0
     0705       S3_PORTR1:  equ   $0705       ; Socket 3 Source Port Register 1
     0706       S3_DHAR0:   equ   $0706       ; Socket 3 Destination Hardware Address Register 0
     0707       S3_DHAR1:   equ   $0707       ; Socket 3 Destination Hardware Address Register 1
     0708       S3_DHAR2:   equ   $0708       ; Socket 3 Destination Hardware Address Register 2
     0709       S3_DHAR3:   equ   $0709       ; Socket 3 Destination Hardware Address Register 3
     070A       S3_DHAR4:   equ   $070A       ; Socket 3 Destination Hardware Address Register 4
     070B       S3_DHAR5:   equ   $070B       ; Socket 3 Destination Hardware Address Register 5
     070C       S3_DIPR0:   equ   $070C       ; Socket 3 Destination IP Address Register 0
     070D       S3_DIPR1:   equ   $070D       ; Socket 3 Destination IP Address Register 1
     070E       S3_DIPR2:   equ   $070E       ; Socket 3 Destination IP Address Register 2
     070F       S3_DIPR3:   equ   $070F       ; Socket 3 Destination IP Address Register 3
     0710       S3_DPORTR0: equ   $0710       ; Socket 3 Destination Port Register 0
     0711       S3_DPORTR1: equ   $0711       ; Socket 3 Destination Port Register 1
     0712       S3_MSS0:    equ   $0712       ; Socket 3 Maximum Segment Size Register 0
     0713       S3_MSS1:    equ   $0713       ; Socket 3 Maximum Segment Size Register 1
     0714       S3_PROTOR:  equ   $0714       ; Socket 3 IP Protocol Register
     0715       S3_TOS:     equ   $0715       ; Socket 3 IP Type Of Service
     0716       S3_TTL:     equ   $0716       ; Socket 3 IP Time To Live
                                              ; 0x0717-0x071D -- Reserved --
     071E       S3_RXBUF_SIZE:  equ  $071E    ; Socket 3 RX Buffer Size
     071F       S3_TXBUF_SIZE:  equ  $071F    ; Socket 3 TX Buffer Size
     0720       S3_TX_FSR0: equ   $0720       ; Socket 3 TX Free Size Register 0
     0721       S3_TX_FSR1: equ   $0721       ; Socket 3 TX Free Size Register 1
     0722       S3_TX_RD0:  equ   $0722       ; Socket 3 TX Read Pointer 0
     0723       S3_TX_RD1:  equ   $0723       ; Socket 3 TX Read Pointer 1
     0724       S3_TX_WR0:  equ   $0724       ; Socket 3 TX Write Pointer 0
     0725       S3_TX_WR1:  equ   $0725       ; Socket 3 TX Write Pointer 1
     0726       S3_RX_RSR0: equ   $0726       ; Socket 3 RX Received Size Register 0
     0727       S3_RX_RSR1: equ   $0727       ; Socket 3 RX Received Size Register 1
     0728       S3_RX_RD0:  equ   $0728       ; Socket 3 RX Read Pointer 0
     0729       S3_RX_RD1:  equ   $0729       ; Socket 3 RX Read Pointer 1
     072A       S3_RX_WR0:  equ   $072A       ; Socket 3 RX Write Pointer 0
     072B       S3_RX_WR1:  equ   $072B       ; Socket 3 RX Write Pointer 1
     072C       S3_IMR:     equ   $072C       ; Socket 3 Interrupt Mask Register
     072D       S3_FRAGR0:  equ   $072D       ; Socket 3 Fragment Offset in IP Header Register 0
     072E       S3_FRAGR1:  equ   $072E       ; Socket 3 Fragment Offset in IP Header Register 1
     072F       S3_MR2:     equ   $072F       ; Socket 3 Mode 2 Register
     0730       S3_KPALVTR: equ   $0730       ; Socket 3 Keep-alive Timer Register
                                              ; 0x0731 -- Reserved --
     0732       S3_RTR0:    equ   $0732       ; Socket 3 Retransmission Time Register 0
     0733       S3_RTR1:    equ   $0733       ; Socket 3 Retransmission Time Register 1
     0734       S3_RCR:     equ   $0734       ; Socket 3 Retransmission Count Register
                
                
                                  ;Transmit and Receive Buffers
                
     4000       TXBASE:     equ   $4000
     6000       RXBASE:     equ   $6000
                
                                  ; TX and RX MASKS ARE IDENTICAL
     1FFF       MASK8K:     equ   $1FFF
     001F       MASK8KH:    equ   $1F
     00FF       MASK8KL:    equ   $FF
     0FFF       MASK4K:     equ   $0FFF
     000F       MASK4KH:    equ   $0F
     00FF       MASK4KL:    equ   $FF
     07FF       MASK2K:     equ   $07FF
     0007       MASK2KH:    equ   $07
     00FF       MASK2KL:    equ   $FF
     03FF       MASK1K:     equ   $03FF
     0003       MASK1KH:    equ   $03
     00FF       MASK1KL:    equ   $FF
                
                
                
                
                                  ; STATUS Equates
                
                                        ; SETUP Values
     0080       RESET:      equ   $80         ; Reset Command for W5100
     0010       PINGBLOCK:  equ   $10         ; PING Response Block
     0008       PPPOE_ENA:  equ   $08         ; PPPoE Enable
                                              ; The following are ALWAYS SET on W5100S
     0002       AUTO_INCRE: equ   $02         ; Auto Increment
     0001       INDIRECT:   equ   $01         ; Indirect Bus Mode
                
                                  ; COMMON Values
                                        ; Interrupt Register
     0080       IR_CONFLCT: equ   $80         ; IP Address Conflict
     0040       IR_UNREACH: equ   $40         ; Destination Port Unreachable
     0020       IR_PPPTERM: equ   $20         ; PPPoE Terminated
     0008       IR_SOCK3:   equ   $08         ; Socket 3 Interrupt
     0004       IR_SOCK2:   equ   $04         ; Socket 2 Interrupt
     0002       IR_SOCK1:   equ   $02         ; Socket 1 Interrupt
     0001       IR_SOCK0:   equ   $01         ; Socket 0 Interrupt
                
                ; IMR_?????   Interrupt Mask Register, Same as Above
                ; For Clarity, the above could have IMR_CONFLCT equ set
                
                ; Memory Size Register Mask is Identical for RX and TX
     00C0       MSR_8KB_S3: equ   %11000000   ; Memory Size, 8KB, Socket 3
     0080       MSR_4KB_S3: equ   %10000000   ; Memory Size, 4KB, Socket 3
     0040       MSR_2KB_S3: equ   %01000000   ; Memory Size, 2KB, Socket 3
     0000       MSR_1KB_S3: equ   %00000000   ; Memory Size, 1KB, Socket 3
                
     0030       MSR_8KB_S2: equ   %00110000   ; Memory Size, 8KB, Socket 2
     0020       MSR_4KB_S2: equ   %00100000   ; Memory Size, 4KB, Socket 2
     0010       MSR_2KB_S2: equ   %00010000   ; Memory Size, 2KB, Socket 2
     0000       MSR_1KB_S2: equ   %00000000   ; Memory Size, 1KB, Socket 2
                
     000C       MSR_8KB_S1: equ   %00001100   ; Memory Size, 8KB, Socket 1
     0008       MSR_4KB_S1: equ   %00001000   ; Memory Size, 4KB, Socket 1
     0004       MSR_2KB_S1: equ   %00000100   ; Memory Size, 2KB, Socket 1
     0000       MSR_1KB_S1: equ   %00000000   ; Memory Size, 1KB, Socket 1
                
     0003       MSR_8KB_S0: equ   %00000011   ; Memory Size, 8KB, Socket 0
     0002       MSR_4KB_S0: equ   %00000010   ; Memory Size, 4KB, Socket 0
     0001       MSR_2KB_S0: equ   %00000001   ; Memory Size, 2KB, Socket 0
     0000       MSR_1KB_S0: equ   %00000000   ; Memory Size, 1KB, Socket 0
                
                
                                        ; Interrupt Register 2
     0001       IR2_WOL:    equ   %00000001   ; WOL MAGIC Packet Interrupt
                
                ; IMR2_?????   Interrupt 2 Mask Register, Same as Above
                ; For Clarity, the above could have IMR2_WOL equ set
                
                                        ; PPP Link Control Protocol, Magic Number
     0001       PMAGICM:     equ   %00000001   ; LCP Magic Number: 0x01010101
                
                                        ; Mode Register 2
     0080       MR2_CLKSEL: equ   %10000000   ; 25MHz, else PHCR1 Value
     0040       MR2_IEN:    equ   %01000000   ; INTn Enable, else INTn Disable
     0020       MR2_NOPRST: equ   %00100000   ; DO NOT respond to incoming Bad Port, TCP
     0010       MR2_UDPURB: equ   %00010000   ; DO NOT respond to incoming Bad Port, UDP
     0008       MR2_WOL:    equ   %00001000   ; Receive Wake On LAN ( WOL ) Packet
     0002       MR2_FARP:   equ   %00000010   ; UDP Mode, Force ARP on every Packet
                
                
                
                                        ; PPPoE Mode Registers
                
                
                                        ; PHY Mode Registers
                ;PHYSR0
                ;PHYSR1
                ;PHYRAR
                ;PHYDIVR
                ;PHYCR0
                ;PHYCR1
                
                
                                        ; SOCKET-less Command Register
     0002       SLCR_ARP:   equ   %00000010   ; Transmit ARP Packet
     0001       SLCR_PING:  equ   %00000001   ; Transmit Ping Request
                
                                        ; SOCKET-less Interrupt (Mask) Register
     0004       SLIMR_TOUT: equ   %00000100   ; Enable TIMEOUT Interrupt
     0002       SLIMR_ARP:  equ   %00000010   ; Enable ARP Interrupt
     0001       SLIMR_PING: equ   %00000001   ; Enable Ping Interrupt
                
                                        ; SOCKET-less Interrupt Register
     0004       SLIR_TOUT:  equ   %00000100   ; Occured, TIMEOUT Interrupt
     0002       SLIR_ARP:   equ   %00000010   ; Occured, ARP Interrupt
     0001       SLIR_PING:  equ   %00000001   ; Occured, Ping Interrupt
                
                
                                  ; SOCKET Values
                
                                        ; Socket Mode Register ( S0 - S3 )
     0080       S_MR_MULTI: equ   %10000000   ; UDP Multicast
     0040       S_MR_MF:    equ   %01000000   ; MAC Filter Enable
     0020       S_MR_ND_MC: equ   %00100000   ; No Delayed ACK / Multicast IGMP Version (MC)
                
     0004       S_MR_MRAW:  equ   %00000100   ; Set Protocol, MACRAW
     0003       S_MR_IPRAW: equ   %00000011   ; Set Protocol, IPRAW
     0002       S_MR_UDP:   equ   %00000010   ; Set Protocol, UDP
     0001       S_MR_TCP:   equ   %00000001   ; Set Protocol, TCP
     0000       S_MR_CLSD:  equ   %00000000   ; Socket CLOSED
                
                
                                        ; Socket Command Register ( S0 - S3 )
     0001       S_CR_OPEN:  equ   %00000001   ; Open Command
     0002       S_CR_LSTEN: equ   %00000010   ; Listen Command
     0004       S_CR_CNNCT: equ   %00000100   ; Connect Command
     0008       S_CR_DSCON: equ   %00001000   ; Disconnect Command
     0010       S_CR_CLOSE: equ   %00010000   ; Close Command
     0020       S_CR_SEND:  equ   %00100000   ; Send Command
     0021       S_CR_SMAC:  equ   %00100001   ; Send MAC Command
     0022       S_CR_SKEEP: equ   %00100010   ; Send Keep Command
     0040       S_CR_RECV:  equ   %01000000   ; RECV Command
                
                
                                        ; SOCKET Interrupt Register ( S0 - S3 )
     0010       SIR_SNDOK: equ    %00010000   ; Occured, SEND OK Interrupt
     0008       SIR_TMOUT: equ    %00001000   ; Occured, TIMEOUT Interrupt
     0004       SIR_RECV:  equ    %00000100   ; Occured, RECEIVED Interrupt
     0002       SIR_DSCON: equ    %00000010   ; Occured, DISCONNECT Interrupt
     0001       SIR_CNNCT: equ    %00000001   ; Occured, CONNECTED Interrupt
                
                
                                        ; Socket Status Register ( S0 - S3 )
     0000       S_SR_CLSD: equ    %00000000   ; Socket Closed
     0013       S_SR_INIT: equ    %00010011   ; Socket Opened as TCP Mode
     0014       S_SR_LSTN: equ    %00010100   ; Socket is TCP Mode & Waiting for Peer Connection
     0017       S_SR_ESTB: equ    %00010111   ; Socket is TCP Mode & TCP Connection is Done
     001C       S_SR_WAIT: equ    %00011100   ; Socket is TCP Mode & Received Disconnection Request
     0022       S_SR_UDP:  equ    %00100010   ; Socket Opened as UDP Mode
     0032       S_SR_IRAW: equ    %00110010   ; Socket Opened as IPRAW Mode
     0042       S_SR_MRAW: equ    %01000010   ; Socket Opened as MACRAW Mode
                                        ; Socket Status Register, Temp Status ( S0 - S3 )
     0015       S_SR_SSNT: equ    %00010101   ; Socket Sent the Connect Request
     0016       S_SR_SRCV: equ    %00010110   ; Socket Received the Connect Request
     0018       S_SR_FIWA: equ    %00011000   ; Socket is in SOCKET Closed ( FIN WAIT)
     001B       S_SR_TIWA: equ    %00011011   ; Socket is in SOCKET Closed ( TIME WAIT)
     001D       S_SR_LACK: equ    %00011101   ; Socket is in SOCKET Closed ( LAST ACK )
                
                                        ; Socket Status Register, ALT ( S0 - S3 )
     0000       SOCK_CLOS: equ    %00000000   ; Socket Closed
     0013       SOCK_INIT: equ    %00010011   ; Socket Opened as TCP Mode
     0014       SOCK_LSTN: equ    %00010100   ; Socket is TCP Mode & Waiting for Peer Connection
     0017       SOCK_ESTB: equ    %00010111   ; Socket is TCP Mode & TCP Connection is Done
     001C       SOCK_WAIT: equ    %00011100   ; Socket is TCP Mode & Received Disconnection Request
     0022       SOCK_UDP:  equ    %00100010   ; Socket Opened as UDP Mode
     0032       SOCK_IRAW: equ    %00110010   ; Socket Opened as IPRAW Mode
     0042       SOCK_MRAW: equ    %01000010   ; Socket Opened as MACRAW Mode
                                        ; Socket Status Register, ALT, Temp Status ( S0 - S3 )
     0015       SOCK_SSNT: equ    %00010101   ; Socket Sent the Connect Request
     0016       SOCK_SRCV: equ    %00010110   ; Socket Received the Connect Request
     0018       SOCK_FIWA: equ    %00011000   ; Socket is in SOCKET Closed ( FIN WAIT)
     001B       SOCK_TIWA: equ    %00011011   ; Socket is in SOCKET Closed ( TIME WAIT)
     001D       SOCK_LACK: equ    %00011101   ; Socket is in SOCKET Closed ( LAST ACK )
                
                
                                        ; Socket Buffer Size, per Socket ( S0 - S3 )
                                        ; This is a Duplicate of the RMSR/TMSR Registers
     0000       S_BUFSZ0K: equ    %00000000   ; 0KB Buffer ( RX/TX )
     0001       S_BUFSZ1K: equ    %00000001   ; 1KB Buffer ( RX/TX )
     0002       S_BUFSZ2K: equ    %00000010   ; 2KB Buffer ( RX/TX )
     0004       S_BUFSZ4K: equ    %00000100   ; 4KB Buffer ( RX/TX )
     0008       S_BUFSZ8K: equ    %00001000   ; 8KB Buffer ( RX/TX )
                
                                        ; Socket Buffer Size, per Socket, ALT ( S0 - S3 )
                                        ; This is a Duplicate of the RMSR/TMSR Registers
     0000       BUFSIZE0K: equ    %00000000   ; 0KB Buffer ( RX/TX )
     0001       BUFSIZE1K: equ    %00000001   ; 1KB Buffer ( RX/TX )
     0002       BUFSIZE2K: equ    %00000010   ; 2KB Buffer ( RX/TX )
     0004       BUFSIZE4K: equ    %00000100   ; 4KB Buffer ( RX/TX )
     0008       BUFSIZE8K: equ    %00001000   ; 8KB Buffer ( RX/TX )
                
                
                                        ; SOCKET Interrupt MASK Register ( S0 - S3 )
     0010       IRM_SNDOK: equ    %00010000   ; Occured, SEND OK Interrupt
     0008       IRM_TMOUT: equ    %00001000   ; Occured, TIMEOUT Interrupt
     0004       IRM_RECV:  equ    %00000100   ; Occured, RECEIVED Interrupt
     0002       IRM_DSCON: equ    %00000010   ; Occured, DISCONNECT Interrupt
     0001       IRM_CNNCT: equ    %00000001   ; Occured, CONNECTED Interrupt
                
                                        ; Socket Mode Register 2 ( S0 - S3 )
     0040       S_MR2_MBBLK: equ   %01000000  ; Broadcast Blocking on MACRAW Mode
     0020       S_MR2_MMBLK: equ   %00100000  ; Multicast Blocking on MACRAW Mode
     0010       S_MR2_I6BLK: equ   %00010000  ; IPv6 Packet Blocking on MACRAW Mode
                
     0002       S_MR2_BRDB:  equ   %00000010  ; Broadcast Blocking on UDP Mode
                                              ; or Force PSH on TCP Mode                                    
     0001       S_MR2_UNIB:  equ   %00000001  ; Unicast Blocking on UDP Multicast Mode
                
                
                
                                              ; End of Equates
                            include "COCOIOEQU.asm"
                ;*********************************************************************
                ;* Title: COCOIOEQU.asm
                ;*********************************************************************
                ;* Author: R. Allen Murphey
                ;*
                ;* License: Contributed 2021 by R. Allen Murphey to CoCoIO Development
                ;*
                ;* Description: CoCoIO for Color Computer Equates
                ;*
                ;* Documentation: https://www.wiznet.io/product-item/w5100s/
                ;*
                ;* Include Files: none
                ;*
                ;* Assembler: lwasm 1.4.2
                ;*
                ;* Revision History:
                ;* Rev #     Date      Who     Comments
                ;* -----  -----------  ------  ---------------------------------------
                ;* 00     2021         RAM     Initial equates from Rick Ulland's Notes
                ;*********************************************************************
                
                                              ; CoCoIO with Jumper set to 0xFF6x Range
     FF68       CIO0CMND:   equ   $FF68       ; CoCoIO Command Register 
     FF69       CIO0ADDR:   equ   $FF69       ; CoCoIO Address Register MSB
                                 ;$FF6A       ; CoCoIO Address Register LSB
     FF6B       CIO0DATA:   equ   $FF6B       ; CoCoIO Read/Write Data Register
                
                                              ; CoCoIO with Jumper set to 0xFF7x Range
     FF78       CIO1CMND:   equ   $FF78       ; CoCoIO Command Register 
     FF79       CIO1ADDR:   equ   $FF79       ; CoCoIO Address Register MSB
                                 ;$FF7A       ; CoCoIO Address Register LSB
     FF7B       CIO1DATA:   equ   $FF7B       ; CoCoIO Read/Write Data Register
                
                                              ; End of CoCoIO equates
                
     FF02       PIA0BD:     equ   $FF02       ; PIA 0 PORT B DATA
     FF03       PIA0BC:     equ   $FF03       ; PIA 0 PORT B CONTROL
                
     A000       POLCAT:     equ   $A000
     A002       CHROUT:     equ   $A002
                
                
                            org   $7E00
7E00 7E7E24     RESETP:     jmp   W5100_RST         ;$7E00
7E03 7E7E41     CONFIG:     jmp   W5100_CFG         ;$7E03
7E06 7E7E79     SETREG:     jmp   W5100_SETREG      ;$7E06
7E09 7E7E8A     GATEWAY:    jmp   W5100_GATEWAY     ;$7Exx
7E0C 7E7E8A     SUBNET:     jmp   W5100_SUBNET      ;$7Exx
7E0F 7E7E8A     HARDWARE:   jmp   W5100_HARDWARE    ;$7Exx
7E12 7E7E8A     IPADDR:     jmp   W5100_IPADDR      ;$7Exx
7E15 7E7EF7     MPISLOT:    jmp   MPISLOT1          ;$7Exx
                
7E18 7E7E8B     DISPGW:     jmp   DISP_GATEWAY      ;$7Exx
7E1B 7E7EA6     DISPSN:     jmp   DISP_SUBNET       ;$7Exx
7E1E 7E7EC1     DISPHW:     jmp   DISP_HARDWARE     ;$7Exx
7E21 7E7EDC     DISPIPADD:  jmp   DISP_IPADDR       ;$7Exx
                
                
7E24            W5100_RST:                    ; Reset the CoCoIO WIZnet 5100S
7E24 BD7EF7                 jsr   MPISLOT1
                ;            jsr   DALLY
7E27 B6FF68                 lda   CIO0CMND    ; Read the current value of MR from CoCoIO Command
7E2A 8A80                   ora   #%10000000  ; Flip bit 7 RST to 1 = init all W5100S registers - autoclear in 3 SYS_CLK
7E2C B7FF68                 sta   CIO0CMND    ; Trigger the reset
7E2F B6FF68     RSTDONE:    lda   CIO0CMND    ; Now read command register to check bit 7 clears when reset is done
7E32 2BFB                   bmi   RSTDONE     ; if bit 7, then A was negative, keep checking bit
7E34 8A03       SETMODE:    ora   #%00000011  ; bit 7 cleared, setup Ping Block disabled, no PPPoE, AutoIncrement, and Indirect Bus Mode
7E36 B7FF68                 sta   CIO0CMND    ; configure the chip and done
7E39 B6FF68                 lda   CIO0CMND    ; readback mode
7E3C 8103                   cmpa  #3          ; is it what we want?
7E3E 26F4                   bne   SETMODE     ; no, try again
7E40 39                     rts
                
7E41            W5100_CFG:                    ; Configure the CoCoIO WIZnet W5100S
7E41 BD7EF7                 jsr   MPISLOT1
                ;            jsr   DALLY
                                                  ; Bring up layer 3 default route
7E44 CC0001                 ldd   #GAR0           ; W5100S Gateway Address Register 0
7E47 8E7FE1                 ldx   #MYGATEWAY      ; Get the location of the Gateway data 
7E4A 108E0004               ldy   #4              ; Setup for loop counting
7E4E BD7E79                 jsr   W5100_SETREG
                
                                                  ; Bring up layer 3 network mask
7E51 CC0005                 ldd   #SUBR0          ; W5100S Subnet Mask Address Register 0
7E54 8E7FE5                 ldx   #MYSUBNET       ; Get the location of the Subnet data
7E57 108E0004               ldy   #4              ; Setup for loop counting
7E5B BD7E79                 jsr   W5100_SETREG
                
                                                  ; Bring up layer 2 address
7E5E CC0009                 ldd   #SHAR0          ; W5100S Source Hardware Address Register 0
7E61 8E7FE9                 ldx   #MYMAC          ; Get the location of the MAC data
7E64 108E0006               ldy   #6              ; Setup for loop counting
7E68 BD7E79                 jsr   W5100_SETREG
                
                                                  ; Bring up layer 3 address
7E6B CC000F                 ldd   #SIPR0          ; W5100S Source IP Register 0
7E6E 8E7FEF                 ldx   #MYIP           ; Get the location of the IP data
7E71 108E0004               ldy   #4              ; Setup for loop counting
7E75 BD7E79                 jsr   W5100_SETREG
7E78 39                     rts
                
7E79            W5100_SETREG:                 ; Configure the Gateway address
7E79 B7FF69                 sta   CIO0ADDR    ; CoCoIO Address Register MSB
7E7C F7FF6A                 stb   CIO0ADDR+1  ; CoCoIO Address Register LSB
                ;            jsr   DALLY
7E7F 1F20                   tfr   Y,D         ; Setup B for loop counting
7E81 A680       SETLOOP:    lda   ,X+         ; Load A with the next byte of Gateway
7E83 B7FF6B                 sta   CIO0DATA    ; Store it to W5100S
                ;            jsr   DALLY
7E86 5A                     decb              ; Decrement loop counter
7E87 26F8                   bne   SETLOOP     ; No, go back and do more
                ;            jsr   DALLY
7E89 39                     rts
                
                
                
7E8A            W5100_GATEWAY:                ; Configure the Gateway address
                
7E8A            W5100_SUBNET:                 ; Next the Subnet Mask
                
7E8A            W5100_HARDWARE:               ; Next the Source Hardware Address
                
7E8A            W5100_IPADDR:                 ; Next the Source IP Address
                
7E8A 39                     rts
                
7E8B            DISP_GATEWAY:
7E8B CC7F64                 ldd   #GWLABEL
7E8E BD7F50                 jsr   DISPSTR0    ; Display the Label
7E91 CC0001                 ldd   #GAR0       ; W5100S Gateway Address Register 0
7E94 B7FF69                 sta   CIO0ADDR    ; CoCoIO Address Register MSB
7E97 F7FF6A                 stb   CIO0ADDR+1  ; CoCoIO Address Register LSB
                ;            jsr   DALLY
                
7E9A C604                   ldb   #4          ; Setup B for loop counting
7E9C            DGWRLOOP:   
7E9C BD7F18                 jsr   BIN2HEX
7E9F BD7F41                 jsr   DISPB2H
                ;            jsr   DALLY
7EA2 5A                     decb              ; Decrement loop counter
7EA3 26F7                   bne   DGWRLOOP    ; No, go back and do more
                ;            jsr   DALLY
                
                ;            LDA   '+'
                ;            JSR   [CHROUT]
                ;            jsr   DALLY
                
7EA5 39                     rts
                
7EA6            DISP_SUBNET:
7EA6 CC7F72                 ldd   #SNLABEL
7EA9 BD7F50                 jsr   DISPSTR0    ; Display the Label            
7EAC CC0005                 ldd   #SUBR0      ; W5100S Subnet Mask Address Register 0
7EAF B7FF69                 sta   CIO0ADDR    ; CoCoIO Address Register MSB
7EB2 F7FF6A                 stb   CIO0ADDR+1  ; CoCoIO Address Register LSB
                
7EB5 C604                   ldb   #4          ; Setup B for loop counting
7EB7            DSUBRLOOP:   
7EB7 BD7F18                 jsr   BIN2HEX
7EBA BD7F41                 jsr   DISPB2H
                ;            jsr   DALLY
7EBD 5A                     decb              ; Decrement loop counter
7EBE 26F7                   bne   DSUBRLOOP   ; No, go back and do more
                ;            jsr   DALLY
                
                ;            LDA   '+'
                ;            JSR   [CHROUT]
                ;            jsr   DALLY
                
7EC0 39                     rts
                
7EC1            DISP_HARDWARE:
7EC1 CC7F80                 ldd   #MALABEL
7EC4 BD7F50                 jsr   DISPSTR0    ; Display the Label
7EC7 CC0009                 ldd   #SHAR0      ; W5100S Source Hardware Address Register 0
7ECA B7FF69                 sta   CIO0ADDR    ; CoCoIO Address Register MSB
7ECD F7FF6A                 stb   CIO0ADDR+1  ; CoCoIO Address Register LSB
                
7ED0 C606                   ldb   #6          ; Setup B for loop counting
7ED2            DSHARLOOP:   
7ED2 BD7F18                 jsr   BIN2HEX
7ED5 BD7F41                 jsr   DISPB2H
                ;            jsr   DALLY
7ED8 5A                     decb              ; Decrement loop counter
7ED9 26F7                   bne   DSHARLOOP   ; No, go back and do more
                ;            jsr   DALLY
                
                ;            LDA   '+'
                ;            JSR   [CHROUT]
                ;            jsr   DALLY
                
                
                
7EDB 39                     rts
                
7EDC            DISP_IPADDR:
7EDC CC7F8E                 ldd   #IPLABEL
7EDF BD7F50                 jsr   DISPSTR0    ; Display the Label
7EE2 CC000F                 ldd   #SIPR0      ; W5100S Source IP Register 0
7EE5 B7FF69                 sta   CIO0ADDR    ; CoCoIO Address Register MSB
7EE8 F7FF6A                 stb   CIO0ADDR+1  ; CoCoIO Address Register LSB
                
7EEB C604                   ldb   #4          ; Setup B for loop counting
7EED            DSIPRLOOP:   
7EED BD7F18                 jsr   BIN2HEX
7EF0 BD7F41                 jsr   DISPB2H
                ;            jsr   DALLY
7EF3 5A                     decb              ; Decrement loop counter
7EF4 26F7                   bne   DSIPRLOOP   ; No, go back and do more
                ;            jsr   DALLY
                
                ;            LDA   '+'
                ;            JSR   [CHROUT]
                ;            jsr   DALLY
                
7EF6 39                     rts
                
                
                
                
7EF7            MPISLOT1:                     ; Configure Multipack SCS to slot 1
7EF7 B6FF7F                 lda   $FF7F       ; Read the MPI slot control
7EFA 84F0                   anda  #%11110000  ; zero out the SCS nybble for MPI slot 1
7EFC B7FF7F                 sta   $FF7F       ; Write the updated SCS
7EFF 39                     rts
                
7F00 B6FF02     DILLY:      lda   PIA0BD      ; clear any pending VSYNC interrupt on PIA0
7F03 B6FF03     DILLY1:     lda   PIA0BC      ; load up the current flags
7F06 2AFB                   bpl   DILLY1      ; if bit 7 not set, keep checking flags
7F08 B6FF02                 lda   PIA0BD      ; clear the interrupt that just happened
7F0B 39                     rts
                
7F0C 3410       DALLY:      pshs  X
7F0E 8E1000                 ldx   #$1000      ; A maximum delay loop 
7F11 301F       DALLY1:     leax  -1,X        ; Decrement X
7F13 26FC                   bne   DALLY1      ; if X>0 not done yet
7F15 3510                   puls  X
7F17 39                     rts
                
                
                
                
7F18            BIN2HEX:    ; W5100 Read DATA and Output HEX in ASCII
                
7F18 3406                   pshs  D           ; Save D ( A&B ) for later
                
7F1A B6FF6B                 lda   CIO0DATA    ; GET DATA from W5100, ( or BINVAL )
                            ;
                            ; CONVERT MORE SIGNIFICANT DIGIT TO ASCII
                            ;
7F1D 1F89                   tfr   A,B         ; SAVE ORIGINAL BINARY VALUE MOVE HIGH DIGIT TO LOW DIGIT
7F1F 44                     lsra
7F20 44                     lsra
7F21 44                     lsra
7F22 44                     lsra
7F23 8109                   cmpa  #9          ; BRANCH IF HIGH DIGIT IS DECIMAL
7F25 2302                   bls   AD30        ; ELSE ADD 7 S0 AFTER ADDING '0' THE 
7F27 8B07                   adda  #7          ; CHARACTER WILL BE IN 'A'..'F'
7F29 8B30       AD30:       adda  #'0'        ; ADD ASCII 0 TO MAKE A CHARACTER
7F2B B77F3F                 sta HEX1VAL       ; STORE ASCII DATA
                
                            ;
                            ; CONVERT LESS SIGNIFICANT DIGIT TO ASCII
                            ; 
7F2E C40F                   andb  #$0F        ; MASK OFF LOW DIGIT    
7F30 C109                   cmpb  #9          ; BRANCH IF LOW DIGIT IS DECIMAL    
7F32 2302                   bls   AD30LD      ; ELSE ADD 7 SO AFTER ADDING '0' THE
7F34 CB07                   addb  #7          ; CHARACTER WILL BE IN 'A'..'F'
7F36 CB30       AD30LD:     addb  #'0'        ; ADD ASCII 0 TO MAKE A CHARACTER
7F38 F77F40                 stb   HEX2VAL     ; STORE ASCII DATA
                
7F3B 3506                   puls  D           ; Restore D ( A&B )
                
7F3D 39                     rts  
                
7F3E 00         BINVAL:     fcb   $00
7F3F 00         HEX1VAL:    fcb   $00
7F40 00         HEX2VAL:    fcb   $00
                
7F41 B67F3F     DISPB2H:    lda   HEX1VAL
7F44 AD9FA002               jsr   [CHROUT]
7F48 B67F40                 lda   HEX2VAL
7F4B AD9FA002               jsr   [CHROUT]
7F4F 39                     rts
                
7F50            DISPSTR0:   ; This Sends a NULL Terminated String to CHROUT, MAX 256 Bytes
7F50 3436                   pshs  D,X,Y       ; Save D ( A&B ), X & Y for later
                
7F52 1F01                   tfr   D,X         ; Copy D to X, for Head of StringZ
7F54 C600                   ldb   #0          ; Setup B for MAX loop, 256
7F56 A680       DISPSTRLP:  lda   ,X+         ; Load A with the byte of the String
7F58 2707                   beq   DISPSTRX    ; End of String Reached   
7F5A AD9FA002               jsr   [CHROUT]    ; Output Character on Screen
7F5E 5A                     decb              ; Decrement loop counter
7F5F 26F5                   bne   DISPSTRLP   ; No, go back and do more
                
7F61            DISPSTRX:
7F61 3536                   puls  D,X,Y       ; Restore D ( A&B ), X & Y
                
7F63 39                     rts
                
7F64 4741544557 GWLABEL:    fcc   "GATEWAY:     "
     2020202020
                ;            fcb   $0D,$0A,$00
7F71 00                     fcb   $00
7F72 5355424E45 SNLABEL:    fcc   "SUBNET:      "
     2020202020
                ;            fcb   $0D,$0A,$00
7F7F 00                     fcb   $00
7F80 4D41432041 MALABEL:    fcc   "MAC ADDRESS: "
     4553533A20
                ;            fcb   $0D,$0A,$00
7F8D 00                     fcb   $00
7F8E 4950204144 IPLABEL:    fcc   "IP ADDRESS:  "
     53533A2020
                ;            fcb   $0D,$0A,$00
7F9B 00                     fcb   $00
                
7F9C            BUFRSOC0:   ; This sets up Socket 0, with 8KB RX and TX Buffers
7F9C CC001A                 ldd   #RMSR       ; RX Memory Size Register
7F9F B7FF69                 sta   CIO0ADDR    ; CoCoIO Address Register MSB
7FA2 F7FF6A                 stb   CIO0ADDR+1  ; CoCoIO Address Register LSB
                ;            jsr   DALLY
                
7FA5 8603                   lda   #MSR_8KB_S0 ; Memory Size, 8KB, Socket 0
7FA7 B7FF6B                 sta   CIO0DATA    ; Store it to W5100S
                ;            jsr   DALLY
                
                ;            ldd   #TMSR       ; TX Memory Size Register
                ;            sta   CIO0ADDR    ; CoCoIO Address Register MSB
                ;            stb   CIO0ADDR+1  ; CoCoIO Address Register LSB
                ;            jsr   DALLY
                
7FAA 8603                   lda   #MSR_8KB_S0 ; Memory Size, 8KB, Socket 0
7FAC B7FF6B                 sta   CIO0DATA    ; Store it to W5100S
                ;            jsr   DALLY
7FAF 39                     rts
                
                
7FB0            INITSOC0:
                            ; The Local Port.         
7FB0 CC0404                 ldd   #S0_PORTR0  ; Socket 0 Source Port Register 0
7FB3 B7FF69                 sta   CIO0ADDR    ; CoCoIO Address Register MSB
7FB6 F7FF6A                 stb   CIO0ADDR+1  ; CoCoIO Address Register LSB
                ;            jsr   DALLY
                
7FB9 CCC000                 ldd   #$C000      ; Port $C000
7FBC B7FF6B                 sta   CIO0DATA    ; Store it to W5100S
7FBF F7FF6B                 stb   CIO0DATA    ; Store it to W5100S
                ;            jsr   DALLY
                
                
                
7FC2 CC0400                 ldd   #S0_MR      ; Socket 0 Mode Register
7FC5 B7FF69                 sta   CIO0ADDR    ; CoCoIO Address Register MSB
7FC8 F7FF6A                 stb   CIO0ADDR+1  ; CoCoIO Address Register LSB
                ;            jsr   DALLY
                
7FCB 8601                   lda   #S_CR_OPEN  ; Open Command
7FCD B7FF6B                 sta   CIO0DATA    ; Store it to W5100S
                ;            jsr   DALLY
7FD0 39                     rts
                
                
                
                
                
                ;     S0_MR
                
                
                
                
                
7FD1            FORGNIP:                      ; Foreign IP Address
7FD1 C0A8FE64               fcb   192,168,254,100
                
7FD5            FORGNPORT:                    ; Foreign Port
7FD5 4E20                   fdb   20000       
                
7FD7            FORGNC:                       ; My Source Hardware Address
7FD7 0008DC0000             fcb   $00,$08,$DC,$00,$00,$01
                
7FDD            FORGNP:                        ; My Source IP Address
7FDD C0A8FE0A               fcb   192,168,254,10
                
                
                            include "COCOIOCFG.asm"
                ;*********************************************************************
                ;* Title: COCOIOCFG.asm
                ;*********************************************************************
                ;* Author: R. Allen Murphey
                ;*
                ;* License: Contributed 2021 by R. Allen Murphey to CoCoIO Development
                ;*
                ;* Description: CoCoIO for Color Computer Configuration
                ;*
                ;* Documentation: https://www.wiznet.io/product-item/w5100s/
                ;*
                ;* Include Files: none
                ;*
                ;* Assembler: lwasm 1.4.2
                ;*
                ;* Revision History:
                ;* Rev #     Date      Who     Comments
                ;* -----  -----------  ------  ---------------------------------------
                ;* 00     2021         RAM     Initial equates from Rick Ulland's Notes
                ;*********************************************************************
                
7FE1            MYGATEWAY:                    ; My Gateway IP Address
7FE1 C0A8FEFE               fcb   192,168,254,254
                
7FE5            MYSUBNET:                     ; My Subnet Mask
7FE5 FFFFFF00               fcb   255,255,255,0 
                
7FE9            MYMAC:                        ; My Source Hardware Address
7FE9 0008DC0000             fcb   $00,$08,$DC,$00,$00,$01
                
7FEF            MYIP:                         ; My Source IP Address
7FEF C0A8FE0A               fcb   192,168,254,10
                                              ; End of My CoCoIO configuration
                
                            end   RESET       ; End of driver

Symbol Table:
[ G] AD30      
[ G] AD30LD    
[ G] AUTO_INCRE
[ G] BIN2HEX   
[ G] BINVAL    
[ G] BUFRSOC0  
[ G] BUFSIZE0K 
[ G] BUFSIZE1K 
[ G] BUFSIZE2K 
[ G] BUFSIZE4K 
[ G] BUFSIZE8K 
[ G] CHROUT    
[ G] CIO0ADDR  
[ G] CIO0CMND  
[ G] CIO0DATA  
[ G] CIO1ADDR  
[ G] CIO1CMND  
[ G] CIO1DATA  
[ G] CLKLCKR   
[ G] CONFIG    
[ G] DALLY     
[ G] DALLY1    
[ G] DGWRLOOP  
[ G] DILLY     
[ G] DILLY1    
[ G] DISP_GATEW
[ G] DISP_HARDW
[ G] DISP_IPADD
[ G] DISP_SUBNE
[ G] DISPB2H   
[ G] DISPGW    
[ G] DISPHW    
[ G] DISPIPADD 
[ G] DISPSN    
[ G] DISPSTR0  
[ G] DISPSTRLP 
[ G] DISPSTRX  
[ G] DSHARLOOP 
[ G] DSIPRLOOP 
[ G] DSUBRLOOP 
[ G] FORGNC    
[ G] FORGNIP   
[ G] FORGNP    
[ G] FORGNPORT 
[ G] GAR0      
[ G] GAR1      
[ G] GAR2      
[ G] GAR3      
[ G] GATEWAY   
[ G] GWLABEL   
[ G] HARDWARE  
[ G] HEX1VAL   
[ G] HEX2VAL   
[ G] IMR       
[ G] IMR2      
[ G] INDIRECT  
[ G] INITSOC0  
[ G] INTPTMR0  
[ G] INTPTMR1  
[ G] IPADDR    
[ G] IPLABEL   
[ G] IR        
[ G] IR2       
[ G] IR2_WOL   
[ G] IR_CONFLCT
[ G] IR_PPPTERM
[ G] IR_SOCK0  
[ G] IR_SOCK1  
[ G] IR_SOCK2  
[ G] IR_SOCK3  
[ G] IR_UNREACH
[ G] IRM_CNNCT 
[ G] IRM_DSCON 
[ G] IRM_RECV  
[ G] IRM_SNDOK 
[ G] IRM_TMOUT 
[ G] MALABEL   
[ G] MASK1K    
[ G] MASK1KH   
[ G] MASK1KL   
[ G] MASK2K    
[ G] MASK2KH   
[ G] MASK2KL   
[ G] MASK4K    
[ G] MASK4KH   
[ G] MASK4KL   
[ G] MASK8K    
[ G] MASK8KH   
[ G] MASK8KL   
[ G] MPISLOT   
[ G] MPISLOT1  
[ G] MR        
[ G] MR2       
[ G] MR2_CLKSEL
[ G] MR2_FARP  
[ G] MR2_IEN   
[ G] MR2_NOPRST
[ G] MR2_UDPURB
[ G] MR2_WOL   
[ G] MSR_1KB_S0
[ G] MSR_1KB_S1
[ G] MSR_1KB_S2
[ G] MSR_1KB_S3
[ G] MSR_2KB_S0
[ G] MSR_2KB_S1
[ G] MSR_2KB_S2
[ G] MSR_2KB_S3
[ G] MSR_4KB_S0
[ G] MSR_4KB_S1
[ G] MSR_4KB_S2
[ G] MSR_4KB_S3
[ G] MSR_8KB_S0
[ G] MSR_8KB_S1
[ G] MSR_8KB_S2
[ G] MSR_8KB_S3
[ G] MYGATEWAY 
[ G] MYIP      
[ G] MYMAC     
[ G] MYSUBNET  
[ G] NETLCKR   
[ G] PHAR0     
[ G] PHAR1     
[ G] PHAR2     
[ G] PHAR3     
[ G] PHAR4     
[ G] PHAR5     
[ G] PHYACR    
[ G] PHYAR     
[ G] PHYCR0    
[ G] PHYCR1    
[ G] PHYDIR0   
[ G] PHYDIR1   
[ G] PHYDIVR   
[ G] PHYDOR0   
[ G] PHYDOR1   
[ G] PHYLCKR   
[ G] PHYRAR    
[ G] PHYSR0    
[ G] PHYSR1    
[ G] PIA0BC    
[ G] PIA0BD    
[ G] PINGBLOCK 
[ G] PINGIDR0  
[ G] PINGIDR1  
[ G] PINGSEQR0 
[ G] PINGSEQR1 
[ G] PMAGIC    
[ G] PMAGICM   
[ G] PMRUR0    
[ G] PMRUR1    
[ G] POLCAT    
[ G] PPPOE_ENA 
[ G] PSIDR0    
[ G] PSIDR1    
[ G] PTIMER    
[ G] RCR       
[ G] RESET     
[ G] RESETP    
[ G] RMSR      
[ G] RSTDONE   
[ G] RTR0      
[ G] RTR1      
[ G] RXBASE    
[ G] S0_CR     
[ G] S0_DHAR0  
[ G] S0_DHAR1  
[ G] S0_DHAR2  
[ G] S0_DHAR3  
[ G] S0_DHAR4  
[ G] S0_DHAR5  
[ G] S0_DIPR0  
[ G] S0_DIPR1  
[ G] S0_DIPR2  
[ G] S0_DIPR3  
[ G] S0_DPORTR0
[ G] S0_DPORTR1
[ G] S0_FRAGR0 
[ G] S0_FRAGR1 
[ G] S0_IMR    
[ G] S0_IR     
[ G] S0_KPALVTR
[ G] S0_MR     
[ G] S0_MR2    
[ G] S0_MSS0   
[ G] S0_MSS1   
[ G] S0_PORTR0 
[ G] S0_PORTR1 
[ G] S0_PROTOR 
[ G] S0_RCR    
[ G] S0_RTR0   
[ G] S0_RTR1   
[ G] S0_RX_RD0 
[ G] S0_RX_RD1 
[ G] S0_RX_RSR0
[ G] S0_RX_RSR1
[ G] S0_RX_WR0 
[ G] S0_RX_WR1 
[ G] S0_RXBUF_S
[ G] S0_SR     
[ G] S0_TOS    
[ G] S0_TTL    
[ G] S0_TX_FSR0
[ G] S0_TX_FSR1
[ G] S0_TX_RD0 
[ G] S0_TX_RD1 
[ G] S0_TX_WR0 
[ G] S0_TX_WR1 
[ G] S0_TXBUF_S
[ G] S1_CR     
[ G] S1_DHAR0  
[ G] S1_DHAR1  
[ G] S1_DHAR2  
[ G] S1_DHAR3  
[ G] S1_DHAR4  
[ G] S1_DHAR5  
[ G] S1_DIPR0  
[ G] S1_DIPR1  
[ G] S1_DIPR2  
[ G] S1_DIPR3  
[ G] S1_DPORTR0
[ G] S1_DPORTR1
[ G] S1_FRAGR0 
[ G] S1_FRAGR1 
[ G] S1_IMR    
[ G] S1_IR     
[ G] S1_KPALVTR
[ G] S1_MR     
[ G] S1_MR2    
[ G] S1_MSS0   
[ G] S1_MSS1   
[ G] S1_PORTR0 
[ G] S1_PORTR1 
[ G] S1_PROTOR 
[ G] S1_RCR    
[ G] S1_RTR0   
[ G] S1_RTR1   
[ G] S1_RX_RD0 
[ G] S1_RX_RD1 
[ G] S1_RX_RSR0
[ G] S1_RX_RSR1
[ G] S1_RX_WR0 
[ G] S1_RX_WR1 
[ G] S1_RXBUF_S
[ G] S1_SR     
[ G] S1_TOS    
[ G] S1_TTL    
[ G] S1_TX_FSR0
[ G] S1_TX_FSR1
[ G] S1_TX_RD0 
[ G] S1_TX_RD1 
[ G] S1_TX_WR0 
[ G] S1_TX_WR1 
[ G] S1_TXBUF_S
[ G] S2_CR     
[ G] S2_DHAR0  
[ G] S2_DHAR1  
[ G] S2_DHAR2  
[ G] S2_DHAR3  
[ G] S2_DHAR4  
[ G] S2_DHAR5  
[ G] S2_DIPR0  
[ G] S2_DIPR1  
[ G] S2_DIPR2  
[ G] S2_DIPR3  
[ G] S2_DPORTR0
[ G] S2_DPORTR1
[ G] S2_FRAGR0 
[ G] S2_FRAGR1 
[ G] S2_IMR    
[ G] S2_IR     
[ G] S2_KPALVTR
[ G] S2_MR     
[ G] S2_MR2    
[ G] S2_MSS0   
[ G] S2_MSS1   
[ G] S2_PORTR0 
[ G] S2_PORTR1 
[ G] S2_PROTOR 
[ G] S2_RCR    
[ G] S2_RTR0   
[ G] S2_RTR1   
[ G] S2_RX_RD0 
[ G] S2_RX_RD1 
[ G] S2_RX_RSR0
[ G] S2_RX_RSR1
[ G] S2_RX_WR0 
[ G] S2_RX_WR1 
[ G] S2_RXBUF_S
[ G] S2_SR     
[ G] S2_TOS    
[ G] S2_TTL    
[ G] S2_TX_FSR0
[ G] S2_TX_FSR1
[ G] S2_TX_RD0 
[ G] S2_TX_RD1 
[ G] S2_TX_WR0 
[ G] S2_TX_WR1 
[ G] S2_TXBUF_S
[ G] S3_CR     
[ G] S3_DHAR0  
[ G] S3_DHAR1  
[ G] S3_DHAR2  
[ G] S3_DHAR3  
[ G] S3_DHAR4  
[ G] S3_DHAR5  
[ G] S3_DIPR0  
[ G] S3_DIPR1  
[ G] S3_DIPR2  
[ G] S3_DIPR3  
[ G] S3_DPORTR0
[ G] S3_DPORTR1
[ G] S3_FRAGR0 
[ G] S3_FRAGR1 
[ G] S3_IMR    
[ G] S3_IR     
[ G] S3_KPALVTR
[ G] S3_MR     
[ G] S3_MR2    
[ G] S3_MSS0   
[ G] S3_MSS1   
[ G] S3_PORTR0 
[ G] S3_PORTR1 
[ G] S3_PROTOR 
[ G] S3_RCR    
[ G] S3_RTR0   
[ G] S3_RTR1   
[ G] S3_RX_RD0 
[ G] S3_RX_RD1 
[ G] S3_RX_RSR0
[ G] S3_RX_RSR1
[ G] S3_RX_WR0 
[ G] S3_RX_WR1 
[ G] S3_RXBUF_S
[ G] S3_SR     
[ G] S3_TOS    
[ G] S3_TTL    
[ G] S3_TX_FSR0
[ G] S3_TX_FSR1
[ G] S3_TX_RD0 
[ G] S3_TX_RD1 
[ G] S3_TX_WR0 
[ G] S3_TX_WR1 
[ G] S3_TXBUF_S
[ G] S_BUFSZ0K 
[ G] S_BUFSZ1K 
[ G] S_BUFSZ2K 
[ G] S_BUFSZ4K 
[ G] S_BUFSZ8K 
[ G] S_CR_CLOSE
[ G] S_CR_CNNCT
[ G] S_CR_DSCON
[ G] S_CR_LSTEN
[ G] S_CR_OPEN 
[ G] S_CR_RECV 
[ G] S_CR_SEND 
[ G] S_CR_SKEEP
[ G] S_CR_SMAC 
[ G] S_MR2_BRDB
[ G] S_MR2_I6BL
[ G] S_MR2_MBBL
[ G] S_MR2_MMBL
[ G] S_MR2_UNIB
[ G] S_MR_CLSD 
[ G] S_MR_IPRAW
[ G] S_MR_MF   
[ G] S_MR_MRAW 
[ G] S_MR_MULTI
[ G] S_MR_ND_MC
[ G] S_MR_TCP  
[ G] S_MR_UDP  
[ G] S_SR_CLSD 
[ G] S_SR_ESTB 
[ G] S_SR_FIWA 
[ G] S_SR_INIT 
[ G] S_SR_IRAW 
[ G] S_SR_LACK 
[ G] S_SR_LSTN 
[ G] S_SR_MRAW 
[ G] S_SR_SRCV 
[ G] S_SR_SSNT 
[ G] S_SR_TIWA 
[ G] S_SR_UDP  
[ G] S_SR_WAIT 
[ G] SETLOOP   
[ G] SETMODE   
[ G] SETREG    
[ G] SHAR0     
[ G] SHAR1     
[ G] SHAR2     
[ G] SHAR3     
[ G] SHAR4     
[ G] SHAR5     
[ G] SIPR0     
[ G] SIPR1     
[ G] SIPR2     
[ G] SIPR3     
[ G] SIR_CNNCT 
[ G] SIR_DSCON 
[ G] SIR_RECV  
[ G] SIR_SNDOK 
[ G] SIR_TMOUT 
[ G] SLCR      
[ G] SLCR_ARP  
[ G] SLCR_PING 
[ G] SLIMR     
[ G] SLIMR_ARP 
[ G] SLIMR_PING
[ G] SLIMR_TOUT
[ G] SLIR      
[ G] SLIR_ARP  
[ G] SLIR_PING 
[ G] SLIR_TOUT 
[ G] SLPHAR0   
[ G] SLPHAR1   
[ G] SLPHAR2   
[ G] SLPHAR3   
[ G] SLPHAR4   
[ G] SLPHAR5   
[ G] SLPIPR0   
[ G] SLPIPR1   
[ G] SLPIPR2   
[ G] SLPIPR3   
[ G] SLRCR     
[ G] SLRTR0    
[ G] SLRTR1    
[ G] SNLABEL   
[ G] SOCK_CLOS 
[ G] SOCK_ESTB 
[ G] SOCK_FIWA 
[ G] SOCK_INIT 
[ G] SOCK_IRAW 
[ G] SOCK_LACK 
[ G] SOCK_LSTN 
[ G] SOCK_MRAW 
[ G] SOCK_SRCV 
[ G] SOCK_SSNT 
[ G] SOCK_TIWA 
[ G] SOCK_UDP  
[ G] SOCK_WAIT 
[ G] SUBNET    
[ G] SUBR0     
[ G] SUBR1     
[ G] SUBR2     
[ G] SUBR3     
[ G] TCNTCLR   
[ G] TCNTR0    
[ G] TCNTR1    
[ G] TMSR      
[ G] TXBASE    
[ G] UIPR0     
[ G] UIPR1     
[ G] UIPR2     
[ G] UIPR3     
[ G] UPORTR0   
[ G] UPORTR1   
[ G] VERR      
[ G] W5100_CFG 
[ G] W5100_GATE
[ G] W5100_HARD
[ G] W5100_IPAD
[ G] W5100_RST 
[ G] W5100_SETR
[ G] W5100_SUBN
