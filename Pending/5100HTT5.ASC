0 REM KEEP THIS LINE FOR TOOLSHED !!!!
2 REM 4/21/21 V5 DLINK ROUTER AS GATEWAY, LAPTOP AS WEB SERVER 
4 REM FIXED BUFFER ADDR/MASK ASSUME SOCKET 0 ONLY, WITH 2k TX & RX BUFFER
10 CLEAR 2100 : POKE 65497,0 : WIDTH 80 : CLS            'FULL TX BUFFER OK
20 DATA "GET / HTTP/1.1"
22 DATA "Host: rickLT.conect2020.org"
24 DATA "Accept-Language: en"
26 DATA ""
28 DL=4                                                  'DATA LINES TO READ 
30 WB = &H4000 : WM = &H7FF                              'WRITE BASE AND MASK
40 RB = &H6000 : RM = &H7FF                              'READ BASE AND MASK
120 PRINT "** TEST 5100 BUFFERS USING HTTP V0.5 **" 
130 POKE &HFF68,&H80                                     'RESET 5100
132 FOR I = 1 TO 100 : NEXT I                            'WAIT A BIT
140 POKE &HFF68,&H03                                     'SET AUTOINC, INDIRECT
1100 REM ***** LOCAL CONFIG *****
1110 POKE &HFF69,0 : POKE &HFF6A,01                      ' START AUTOINC HERE
1120 POKE &HFF6B,192 : POKE &HFF6B,168 : POKE &HFF6B,0 : POKE &HFF6B,1 'GATEWAY
1130 POKE &HFF6B,255 : POKE &HFF6B,255 : POKE &HFF6B,255 : POKE &HFF6B,0 'SUBNET
1140 POKE &HFF6B,&H5C : POKE &HFF6B,&H26 : POKE &HFF6B,&H0A  'MAC PT 1
1150 POKE &HFF6B,&H01 : POKE &HFF6B,&H02 : POKE &HFF6B,&H03  'MAC PT 2
1160 POKE &HFF6B,192 : POKE &HFF6B,168 : POKE &HFF6B,0 : POKE &HFF6B,7 'MY IP
1200 REM **** REMOTE CONFIG *****
1210 POKE &HFF69,&H04 : POKE &HFF6A,&H00 : POKE &HFF6B, 1 'S0 -> TCP MODE
1220 POKE &HFF69,&H04 : POKE &HFF6A,&H04 
1230 POKE &HFF6B,&H80 : POKE &HFF6B,RND(&HFF)            'SET EPHM PORT #
1240 POKE &HFF69,&H04 : POKE &HFF6A,&H0C                 'FOREIGN IP 
1250 POKE &HFF6B,192 : POKE &HFF6B,168 : POKE &HFF6B,0 : POKE &HFF6B,124
1260 POKE &HFF6B,0 : POKE &HFF6B,80                      'PORT VIA AUTOINC
1300 REM *** OPEN SOCKET *****************************
1310 POKE &HFF69,&H04 : POKE &HFF6A,&H01 : POKE &HFF6B, 1 'TRY TO OPEN SOCKET
1320 POKE &HFF69,&H04 : POKE &HFF6A,&H03 : S = PEEK(&HFF6B) 'GET STATUS
1330 IF S <> &H13 THEN 20040                             'STAT <> SOCK_INIT
1340 POKE &HFF69,&H04 : POKE &HFF6A,&H01 : POKE &HFF6B, 4 'TRY CONNECT   
1350 POKE &HFF69,&H04 : POKE &HFF6A,&H03 : C = PEEK(&HFF6B) 'GET STATUS
1360 IF C = 0 THEN 20030                                 'STAT = SOCK_CLOSED
1370 IF C <> &H17 THEN 1320                              'DO UNTIL SOCK_ESTAB 
1480 REM *** PREP DATA WRITE *************************   
1490 W$=""
1500 FOR J = 1 TO DL                                     'BUILD A PACKET
1510    READ X$                                          
1520    W$ = W$ + X$ + CHR$(13) + CHR$(10)
1530 NEXT J
1535 SS = 1                                              'SS=STRING START POS
1540 PRINT "** SENDING DATA **" : PRINT W$
1550 WZ = LEN(W$)                                        'WZ = WRITE SIZE
1554 POKE &HFF69,&H04 : POKE &HFF6A,&H20
1556 F = (PEEK(&HFF6B)*256)+PEEK(&HFF6B) 
1558 IF F < WZ THEN GOTO 1554                            'LOOP UNTIL FREE SIZE OK
1560 POKE &HFF69,&H04 : POKE &HFF6A,&H22 
1570 WP = (PEEK(&HFF6B)*256)+PEEK(&HFF6B)                'WP = WRITE POINTER
1572 B = INT(WP/256) : C = WP-(256*B)
1574 D = INT(WM/256) : E = WM-(256*D)
1576 F = B AND D : G = C AND E
1580 WL = ((F*256)+G)+WB                                 'WL=WP AND MASK+BASE
1590 EB = WB+WM                                          'END BUFFER
1600 SG = WZ                                             'PROPOSE ALL BYTES
1610 NP = WP+WZ+1                                        'PROP NEXT WRITE PTR ***VERIFY***
1620 IF EB-WL > WZ THEN 1720                             '1 SEG FITS, JUMP  
1630 REM *** TWO SEGMENT, SEND 1ST THEN RESET ***
1640 SG = EB-WL                                          'SEG=REST OF BUFFER
1650 GOSUB 1800                                          'SEND THAT 
1660 SG = WZ-SG : WZ = SG +1                             'SEGMENT & SIZE = REST OF DATA
1670 WL = WB                                             'VERIFY ME ***********************   
1720 REM *** SINGLE SEGMENT OR FINAL SEGMENT ***  
1725 NP = WP+SG+1
1730 GOSUB 1800                                          'REMAINDER OF WZ 
1735 NP = WP+SG+1                                        '
1740 REM *** CLEANUP / EXIT ***                                              
1750 POKE &HFF69,&H04 : POKE &HFF6A,&H22 
1760 B = INT(NP/256) : C = NP-(256*B)
1770 POKE &HFF69,B : POKE &HFF6A,C                       'MOVE WP PAST LAST WRITE 'VERIFY ME *******
1780 POKE &HFF69,&H04 : POKE &HFF6A,&H01 : POKE &HFF6B,&H20 'SEND IT  
1790 GOTO 2500
1800 REM *** WRITE DATA ***
1810 B = INT(WL/256) : C = WL-(256*B)                    'WRITE LOC IN 2 BYTES 
1820 POKE &HFF69,B : POKE &HFF6A,C                       'SET IT
1830 L = LEN(W$)
1840 FOR I = SS TO L
1850    W = ASC(MID$(W$,I,1))
1860    POKE &HFF6B,W
1870 NEXT I
1875 SS = L+1                                            ' NEXT STRING START
1880 POKE &HFF69,&H04 : POKE &HFF6A,&H01 : POKE &HFF6B,&H20 'COMMAND REG
1900 POKE &HFF69,&H04 : POKE &HFF6A,&H22                   'SEND THE PACKAGE
1910 WP = NP                                             ' NEXT WRITE POINTER ' VERIFY ME ********
1920 RETURN                                              ' *** END DATA WRITE
2500 REM *** START DATA READ ************************** 
2510 PRINT "** WAITING FOR DATA ";   
2520 POKE &HFF69,&H04 : POKE &HFF6A,&H26
2530 RZ = (PEEK(&HFF6B)*256)+PEEK(&HFF6B)                'RZ = READ SIZE
2540 PRINT ".";
2550 IF RZ = 0 THEN 2520 ELSE PRINT "**"                 'DO UNTIL DATA EXISTS
2560 POKE &HFF69,&H04 : POKE &HFF6A,&H28 
2570 RP = (PEEK(&HFF6B)*256)+PEEK(&HFF6B)                'RP = READ POINTER
1572 B = INT(RP/256) : C = RP-(256*B)
1574 D = INT(RM/256) : E = RM-(256*D)
1576 F = B AND D : G = C AND E
1580 RL = ((F*256)+G)+RB                                 'RL=RP AND MASK+BASE
2590 EB = RB+RM                                          'READ BASE + READ MASK 
2600 SG = RZ                                             'PROPOSED = ALL BYTES
2610 NP = RP+RZ+1                                        'PROP. NEXT READ PTR
2620 IF EB-RL > RZ THEN 2800                             'SINGLE SEG FITS, JUMP  
2630 REM *** TWO SEGMENT ***
2640 SG = EB-RL                                          'SEG = REST OF BUFFER
2650 GOSUB 2800                                          'GET THAT 
2660 SG = RZ-SG                                          'SEG = REMAINING DATA
2670 RP = RB                                             'RESTART READ PTR? ' VERIFY ME *****      
2680 B = INT(RP/256) : C = RP-(256*B)
2690 POKE &HFF69,&H04 : POKE &HFF6A,&H28 
2700 POKE &HFF69,B : POKE &HFF6A,C
2710 NP = RB+SG+1                                        'RESET NEXT READ PTR
2720 REM *** SINGLE SEGMENT OR FINAL SEGMENT ***                                            
2730 GOSUB 2800                                          'GET REMAINDER OF RZ 
2740 REM *** CLEANUP / EXIT ***                                              
2750 POKE &HFF69,&H04 : POKE &HFF6A,&H28 
2760 B = INT(NP/256) : C = NP-(256*B)
2770 POKE &HFF69,B : POKE &HFF6A,C                       'RP TO END OF READ
2780 POKE &HFF69,&H04 : POKE &HFF6A,&H01 : POKE &HFF6B,&H40 'SIGNAL READ IS DONE 
2790 GOTO 3000
2800 REM *** PRINT DATA ***
2810 B = INT(RL/256) : C = RL-(256*B)                    'READ LOC IN 2 BYTES 
2820 POKE &HFF69,B : POKE &HFF6A,C                       'SET ADDR ON WIZNET
2830 FOR I = 1 TO SG
2840 D = PEEK(&HFF6B)
2850 IF D > 31 AND D < 128 THEN PRINT CHR$(D);
2860 IF D = 13 THEN PRINT
2870 NEXT I
2880 RETURN
2890 REM *** END DATA READ *****************************
3020 GOTO 3200                                            ' PUNT FOR NOW
20000 REM ******** CONNECT STATUS DUMP *****************                
20010 PRINT "SOCKET OPEN."
20020 GOTO 20070
20030 IF C = 0 THEN PRINT "CONNECT FAILED."
20040 PRINT "SOCKET STATUS = "; HEX$(S); " ";
20050 IF S = 15 THEN PAUSE 3 : GOTO 1300           ' TRY AGAIN
20060 POKE &HFF69,0 : POKE &HFF6A,01    
20070 PRINT
20080 PRINT " GATEWAY"; PEEK(&HFF6B); PEEK(&HFF6B); PEEK(&HFF6B); PEEK(&HFF6B)
20090 PRINT "  SUBNET"; PEEK(&HFF6B); PEEK(&HFF6B); PEEK(&HFF6B); PEEK(&HFF6B)
20100 PRINT "MAC ADDR "; HEX$(PEEK(&HFF6B)); " "; HEX$(PEEK(&HFF6B)); " "; HEX$(PEEK(&HFF6B));
20110 PRINT " "; HEX$(PEEK(&HFF6B)); " "; HEX$(PEEK(&HFF6B)); " "; HEX$(PEEK(&HFF6B))
20120 PRINT "   MY IP"; PEEK(&HFF6B); PEEK(&HFF6B); PEEK(&HFF6B); PEEK(&HFF6B)
20130 POKE &HFF69,&H04 : POKE &HFF6A,&H04
20132 PRINT " MY PORT"; PEEK(&HFF6B) * 256 + PEEK(&HFF6B) 
20140 PRINT
20150 POKE &HFF69,&H04 : POKE &HFF6A,&H0C
20160 PRINT "  REM IP"; PEEK(&HFF6B); PEEK(&HFF6B); PEEK(&HFF6B); PEEK(&HFF6B)
20170 PRINT "REM PORT"; PEEK(&HFF6B) * 256 + PEEK(&HFF6B)
20180 PRINT "<EOF>"
20200 REM ******** WRITE BUFFER TESTER ******************** 
20210 POKE &HFF69,B : POKE &HFF6A,C 
20220 FOR I = 1 TO L
20230    PRINT CHR$(PEEK(&HFF6B))
20240 NEXT I
20250 GOTO 32000
31999 REM *** CLOSE ********************************
32000 POKE &HFF69,&H00 : POKE &HFF6A,&H01 : POKE &HFF6B,&H00  'CLOSE SOCKET 
